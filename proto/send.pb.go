// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.9.0
// source: send.proto

package proto

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 发送服务对象
type SmtpServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`     //主键
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`  //名字
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`  //地址
	Port int64  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"` //端口
}

func (x *SmtpServer) Reset() {
	*x = SmtpServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmtpServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmtpServer) ProtoMessage() {}

func (x *SmtpServer) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmtpServer.ProtoReflect.Descriptor instead.
func (*SmtpServer) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{0}
}

func (x *SmtpServer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SmtpServer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SmtpServer) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *SmtpServer) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

// 发送服务响应
type SmtpServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*SmtpServer `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Code    uint32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //状态码 0=失败,1=成功
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //信息
	Count   int64         `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`    //总条数
}

func (x *SmtpServerResponse) Reset() {
	*x = SmtpServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmtpServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmtpServerResponse) ProtoMessage() {}

func (x *SmtpServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmtpServerResponse.ProtoReflect.Descriptor instead.
func (*SmtpServerResponse) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{1}
}

func (x *SmtpServerResponse) GetData() []*SmtpServer {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SmtpServerResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SmtpServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SmtpServerResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 添加发送规则请求
type AddSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                       //标题
	MessageId     int64  `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`             //消息id
	Createtime    int64  `protobuf:"varint,3,opt,name=createtime,proto3" json:"createtime,omitempty"`                            //创建时间
	SendModel     uint32 `protobuf:"varint,4,opt,name=send_model,json=sendModel,proto3" json:"send_model,omitempty"`             //发送模型:0
	SendServerId  string `protobuf:"bytes,5,opt,name=send_server_id,json=sendServerId,proto3" json:"send_server_id,omitempty"`   //smtp id组  例子:1,2
	DispatchModel uint32 `protobuf:"varint,6,opt,name=dispatch_model,json=dispatchModel,proto3" json:"dispatch_model,omitempty"` //0
	Receive       string `protobuf:"bytes,7,opt,name=receive,proto3" json:"receive,omitempty"`                                   //接收者邮箱号: 格式:email1,email2,email3
}

func (x *AddSendRequest) Reset() {
	*x = AddSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSendRequest) ProtoMessage() {}

func (x *AddSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSendRequest.ProtoReflect.Descriptor instead.
func (*AddSendRequest) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{2}
}

func (x *AddSendRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddSendRequest) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *AddSendRequest) GetCreatetime() int64 {
	if x != nil {
		return x.Createtime
	}
	return 0
}

func (x *AddSendRequest) GetSendModel() uint32 {
	if x != nil {
		return x.SendModel
	}
	return 0
}

func (x *AddSendRequest) GetSendServerId() string {
	if x != nil {
		return x.SendServerId
	}
	return ""
}

func (x *AddSendRequest) GetDispatchModel() uint32 {
	if x != nil {
		return x.DispatchModel
	}
	return 0
}

func (x *AddSendRequest) GetReceive() string {
	if x != nil {
		return x.Receive
	}
	return ""
}

// 编辑发送规则请求
type EditSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id,omitempty"`                                            //主键
	Title         string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                       //标题
	MessageId     int64  `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`             //消息Id
	Createtime    int64  `protobuf:"varint,3,opt,name=createtime,proto3" json:"createtime,omitempty"`                            //创建时间
	SendModel     uint32 `protobuf:"varint,4,opt,name=send_model,json=sendModel,proto3" json:"send_model,omitempty"`             //发送模型:0
	SendServerId  string `protobuf:"bytes,5,opt,name=send_server_id,json=sendServerId,proto3" json:"send_server_id,omitempty"`   //smtp id组  例子:1,2
	DispatchModel uint32 `protobuf:"varint,6,opt,name=dispatch_model,json=dispatchModel,proto3" json:"dispatch_model,omitempty"` //0
	Receive       string `protobuf:"bytes,7,opt,name=receive,proto3" json:"receive,omitempty"`                                   //接收者邮箱号: 格式:email1,email2,email3
}

func (x *EditSendRequest) Reset() {
	*x = EditSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditSendRequest) ProtoMessage() {}

func (x *EditSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditSendRequest.ProtoReflect.Descriptor instead.
func (*EditSendRequest) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{3}
}

func (x *EditSendRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EditSendRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EditSendRequest) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *EditSendRequest) GetCreatetime() int64 {
	if x != nil {
		return x.Createtime
	}
	return 0
}

func (x *EditSendRequest) GetSendModel() uint32 {
	if x != nil {
		return x.SendModel
	}
	return 0
}

func (x *EditSendRequest) GetSendServerId() string {
	if x != nil {
		return x.SendServerId
	}
	return ""
}

func (x *EditSendRequest) GetDispatchModel() uint32 {
	if x != nil {
		return x.DispatchModel
	}
	return 0
}

func (x *EditSendRequest) GetReceive() string {
	if x != nil {
		return x.Receive
	}
	return ""
}

// 发送规则详情请求
type SendInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendId int64 `protobuf:"varint,1,opt,name=send_id,json=sendId,proto3" json:"send_id,omitempty"` //发送规则 主键
}

func (x *SendInfoRequest) Reset() {
	*x = SendInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInfoRequest) ProtoMessage() {}

func (x *SendInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInfoRequest.ProtoReflect.Descriptor instead.
func (*SendInfoRequest) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{4}
}

func (x *SendInfoRequest) GetSendId() int64 {
	if x != nil {
		return x.SendId
	}
	return 0
}

// 发送规则控制请求
type SendInfoActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendId int64 `protobuf:"varint,1,opt,name=send_id,json=sendId,proto3" json:"send_id,omitempty"` //发送规则 主键
	Status int64 `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SendInfoActionRequest) Reset() {
	*x = SendInfoActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInfoActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInfoActionRequest) ProtoMessage() {}

func (x *SendInfoActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInfoActionRequest.ProtoReflect.Descriptor instead.
func (*SendInfoActionRequest) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{5}
}

func (x *SendInfoActionRequest) GetSendId() int64 {
	if x != nil {
		return x.SendId
	}
	return 0
}

func (x *SendInfoActionRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 发送规则控制响应
type SendInfoActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //状态码 0=失败,1=成功
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //信息
}

func (x *SendInfoActionResponse) Reset() {
	*x = SendInfoActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInfoActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInfoActionResponse) ProtoMessage() {}

func (x *SendInfoActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInfoActionResponse.ProtoReflect.Descriptor instead.
func (*SendInfoActionResponse) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{6}
}

func (x *SendInfoActionResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendInfoActionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 发送规则响应
type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //状态码 0=失败,1=成功
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //信息
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{7}
}

func (x *SendResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 发送规则详情响应
type SendInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //状态码 0=失败,1=成功
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //信息
}

func (x *SendInfoResponse) Reset() {
	*x = SendInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInfoResponse) ProtoMessage() {}

func (x *SendInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInfoResponse.ProtoReflect.Descriptor instead.
func (*SendInfoResponse) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{8}
}

func (x *SendInfoResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SendInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 发送规则列表响应
type GetSendInfoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,12,opt,name=id,proto3" json:"id,omitempty"`                                                //主键
	Title          string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                                            //标题
	MessageId      int64  `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`                  //消息id
	Createtime     int64  `protobuf:"varint,3,opt,name=createtime,proto3" json:"createtime,omitempty"`                                 //创建时间
	SendModel      uint32 `protobuf:"varint,4,opt,name=send_model,json=sendModel,proto3" json:"send_model,omitempty"`                  //发送模型:0
	SendServerId   string `protobuf:"bytes,5,opt,name=send_server_id,json=sendServerId,proto3" json:"send_server_id,omitempty"`        //smtp id组  例子:1,2
	DispatchModel  uint32 `protobuf:"varint,6,opt,name=dispatch_model,json=dispatchModel,proto3" json:"dispatch_model,omitempty"`      //0
	Receive        string `protobuf:"bytes,7,opt,name=receive,proto3" json:"receive,omitempty"`                                        //接收者邮箱号: 格式:email1,email2,email3
	Status         uint32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`                                         //状态:0=未开始,1=已开始,2=已结束
	SendListCount  uint32 `protobuf:"varint,9,opt,name=send_list_count,json=sendListCount,proto3" json:"send_list_count,omitempty"`    //发送总数
	SuccessCount   uint32 `protobuf:"varint,10,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`        //发送成功数
	MessageTitle   string `protobuf:"bytes,11,opt,name=message_title,json=messageTitle,proto3" json:"message_title,omitempty"`         //消息标题
	SendServerText string `protobuf:"bytes,13,opt,name=send_server_text,json=sendServerText,proto3" json:"send_server_text,omitempty"` //发送服务标题
}

func (x *GetSendInfoList) Reset() {
	*x = GetSendInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendInfoList) ProtoMessage() {}

func (x *GetSendInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendInfoList.ProtoReflect.Descriptor instead.
func (*GetSendInfoList) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{9}
}

func (x *GetSendInfoList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSendInfoList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetSendInfoList) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *GetSendInfoList) GetCreatetime() int64 {
	if x != nil {
		return x.Createtime
	}
	return 0
}

func (x *GetSendInfoList) GetSendModel() uint32 {
	if x != nil {
		return x.SendModel
	}
	return 0
}

func (x *GetSendInfoList) GetSendServerId() string {
	if x != nil {
		return x.SendServerId
	}
	return ""
}

func (x *GetSendInfoList) GetDispatchModel() uint32 {
	if x != nil {
		return x.DispatchModel
	}
	return 0
}

func (x *GetSendInfoList) GetReceive() string {
	if x != nil {
		return x.Receive
	}
	return ""
}

func (x *GetSendInfoList) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSendInfoList) GetSendListCount() uint32 {
	if x != nil {
		return x.SendListCount
	}
	return 0
}

func (x *GetSendInfoList) GetSuccessCount() uint32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *GetSendInfoList) GetMessageTitle() string {
	if x != nil {
		return x.MessageTitle
	}
	return ""
}

func (x *GetSendInfoList) GetSendServerText() string {
	if x != nil {
		return x.SendServerText
	}
	return ""
}

// 发送规则列表响应
type GetSendInfoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*GetSendInfoList `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`       //列表数组
	Code    uint32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //状态码 0=失败,1=成功
	Message string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //信息
	Count   int64              `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetSendInfoListResponse) Reset() {
	*x = GetSendInfoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendInfoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendInfoListResponse) ProtoMessage() {}

func (x *GetSendInfoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendInfoListResponse.ProtoReflect.Descriptor instead.
func (*GetSendInfoListResponse) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{10}
}

func (x *GetSendInfoListResponse) GetData() []*GetSendInfoList {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSendInfoListResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSendInfoListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSendInfoListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 获取发送规则列表请求
type GetSendInfoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`     //页数
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   //每页条数
	Status int64 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` //状态 -1=全部 0=未开始,1=已开始,2=已结束
}

func (x *GetSendInfoListRequest) Reset() {
	*x = GetSendInfoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendInfoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendInfoListRequest) ProtoMessage() {}

func (x *GetSendInfoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendInfoListRequest.ProtoReflect.Descriptor instead.
func (*GetSendInfoListRequest) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{11}
}

func (x *GetSendInfoListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSendInfoListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSendInfoListRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

// 发送对象邮件账号
type GetSendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`                                                //主键
	SendId         int64  `protobuf:"varint,1,opt,name=send_id,json=sendId,proto3" json:"send_id,omitempty"`                          //发送规则 主键id
	Receive        string `protobuf:"bytes,2,opt,name=receive,proto3" json:"receive,omitempty"`                                       //接收者邮箱号:
	Status         int64  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`                                        //状态:0=未发送,1=已发送
	SendServerId   int64  `protobuf:"varint,4,opt,name=send_server_id,json=sendServerId,proto3" json:"send_server_id,omitempty"`      //smtp id
	SendServerText string `protobuf:"bytes,6,opt,name=send_server_text,json=sendServerText,proto3" json:"send_server_text,omitempty"` //smtp title
}

func (x *GetSendList) Reset() {
	*x = GetSendList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendList) ProtoMessage() {}

func (x *GetSendList) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendList.ProtoReflect.Descriptor instead.
func (*GetSendList) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{12}
}

func (x *GetSendList) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSendList) GetSendId() int64 {
	if x != nil {
		return x.SendId
	}
	return 0
}

func (x *GetSendList) GetReceive() string {
	if x != nil {
		return x.Receive
	}
	return ""
}

func (x *GetSendList) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSendList) GetSendServerId() int64 {
	if x != nil {
		return x.SendServerId
	}
	return 0
}

func (x *GetSendList) GetSendServerText() string {
	if x != nil {
		return x.SendServerText
	}
	return ""
}

// 发送对象邮件账号响应
type GetSendListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*GetSendList `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Code    uint32         `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`      //状态码 0=失败,1=成功
	Message string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` //信息
	Count   int64          `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`    //总条数
}

func (x *GetSendListResponse) Reset() {
	*x = GetSendListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendListResponse) ProtoMessage() {}

func (x *GetSendListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendListResponse.ProtoReflect.Descriptor instead.
func (*GetSendListResponse) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{13}
}

func (x *GetSendListResponse) GetData() []*GetSendList {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSendListResponse) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSendListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSendListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 发送对象邮件列表请求
type GetSendListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                   //页数
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                 //每页数量
	Status int64 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`               //状态:-1=全部 0=未发送,1=已发送
	SendId int64 `protobuf:"varint,4,opt,name=send_id,json=sendId,proto3" json:"send_id,omitempty"` //发送规则 主键id
}

func (x *GetSendListRequest) Reset() {
	*x = GetSendListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_send_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSendListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSendListRequest) ProtoMessage() {}

func (x *GetSendListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_send_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSendListRequest.ProtoReflect.Descriptor instead.
func (*GetSendListRequest) Descriptor() ([]byte, []int) {
	return file_send_proto_rawDescGZIP(), []int{14}
}

func (x *GetSendListRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetSendListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetSendListRequest) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSendListRequest) GetSendId() int64 {
	if x != nil {
		return x.SendId
	}
	return 0
}

var File_send_proto protoreflect.FileDescriptor

var file_send_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x75,
	0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x0a, 0x53, 0x6d, 0x74, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x84, 0x01, 0x0a, 0x12, 0x53, 0x6d, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x2e, 0x53, 0x6d, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x53, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x0a,
	0x0e, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x70, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x22, 0xfc, 0x01, 0x0a, 0x0f, 0x45, 0x64, 0x69, 0x74, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x22,
	0x48, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x46, 0x0a, 0x16, 0x53, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x3c, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x40, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xb0, 0x03, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x73, 0x65, 0x6e, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xb8, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65,
	0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x22, 0x86, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x32, 0xbb, 0x04, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x53, 0x65, 0x6e,
	0x64, 0x12, 0x1a, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x41,
	0x64, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x08, 0x53, 0x65, 0x6e,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1e, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x2e, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x53, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x75, 0x70, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x6d, 0x74, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e,
	0x53, 0x6d, 0x74, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_send_proto_rawDescOnce sync.Once
	file_send_proto_rawDescData = file_send_proto_rawDesc
)

func file_send_proto_rawDescGZIP() []byte {
	file_send_proto_rawDescOnce.Do(func() {
		file_send_proto_rawDescData = protoimpl.X.CompressGZIP(file_send_proto_rawDescData)
	})
	return file_send_proto_rawDescData
}

var file_send_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_send_proto_goTypes = []interface{}{
	(*SmtpServer)(nil),              // 0: super_send.SmtpServer
	(*SmtpServerResponse)(nil),      // 1: super_send.SmtpServerResponse
	(*AddSendRequest)(nil),          // 2: super_send.AddSendRequest
	(*EditSendRequest)(nil),         // 3: super_send.EditSendRequest
	(*SendInfoRequest)(nil),         // 4: super_send.SendInfoRequest
	(*SendInfoActionRequest)(nil),   // 5: super_send.SendInfoActionRequest
	(*SendInfoActionResponse)(nil),  // 6: super_send.SendInfoActionResponse
	(*SendResponse)(nil),            // 7: super_send.SendResponse
	(*SendInfoResponse)(nil),        // 8: super_send.SendInfoResponse
	(*GetSendInfoList)(nil),         // 9: super_send.GetSendInfoList
	(*GetSendInfoListResponse)(nil), // 10: super_send.GetSendInfoListResponse
	(*GetSendInfoListRequest)(nil),  // 11: super_send.GetSendInfoListRequest
	(*GetSendList)(nil),             // 12: super_send.GetSendList
	(*GetSendListResponse)(nil),     // 13: super_send.GetSendListResponse
	(*GetSendListRequest)(nil),      // 14: super_send.GetSendListRequest
	(*empty.Empty)(nil),             // 15: google.protobuf.Empty
}
var file_send_proto_depIdxs = []int32{
	0,  // 0: super_send.SmtpServerResponse.data:type_name -> super_send.SmtpServer
	9,  // 1: super_send.GetSendInfoListResponse.data:type_name -> super_send.GetSendInfoList
	12, // 2: super_send.GetSendListResponse.data:type_name -> super_send.GetSendList
	2,  // 3: super_send.SendService.SetSend:input_type -> super_send.AddSendRequest
	4,  // 4: super_send.SendService.SendInfo:input_type -> super_send.SendInfoRequest
	11, // 5: super_send.SendService.GetSendInfoList:input_type -> super_send.GetSendInfoListRequest
	14, // 6: super_send.SendService.GetSendList:input_type -> super_send.GetSendListRequest
	5,  // 7: super_send.SendService.SendInfoAction:input_type -> super_send.SendInfoActionRequest
	3,  // 8: super_send.SendService.SetSendInfo:input_type -> super_send.EditSendRequest
	15, // 9: super_send.SendService.GetSmtpServerList:input_type -> google.protobuf.Empty
	7,  // 10: super_send.SendService.SetSend:output_type -> super_send.SendResponse
	8,  // 11: super_send.SendService.SendInfo:output_type -> super_send.SendInfoResponse
	10, // 12: super_send.SendService.GetSendInfoList:output_type -> super_send.GetSendInfoListResponse
	13, // 13: super_send.SendService.GetSendList:output_type -> super_send.GetSendListResponse
	6,  // 14: super_send.SendService.SendInfoAction:output_type -> super_send.SendInfoActionResponse
	7,  // 15: super_send.SendService.SetSendInfo:output_type -> super_send.SendResponse
	1,  // 16: super_send.SendService.GetSmtpServerList:output_type -> super_send.SmtpServerResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_send_proto_init() }
func file_send_proto_init() {
	if File_send_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_send_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmtpServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmtpServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInfoActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInfoActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendInfoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendInfoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_send_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSendListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_send_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_send_proto_goTypes,
		DependencyIndexes: file_send_proto_depIdxs,
		MessageInfos:      file_send_proto_msgTypes,
	}.Build()
	File_send_proto = out.File
	file_send_proto_rawDesc = nil
	file_send_proto_goTypes = nil
	file_send_proto_depIdxs = nil
}
